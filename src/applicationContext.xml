<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">      
	
	<!-- Spring 整合  Hibernate-->
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql:///blog" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<property name="minPoolSize" value="5"/>
		<property name="maxPoolSize" value="10"/>
	</bean>

	<!-- 配置 Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 配置数据源 属性 -->
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<!-- 配置Hibernate 基本属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<!-- 配置Hibernate映射文件的位置以及名称 -->
		<property name="mappingResources">
			<list>
				<value>com/bd/entity/UserEntity.hbm.xml</value>
				<value>com/bd/entity/BlogArticleEntity.hbm.xml</value>
				<value>com/bd/entity/BlogClassifyEntity.hbm.xml</value>
				<value>com/bd/entity/BlogClassifyListEntity.hbm.xml</value>
				<value>com/bd/entity/BlogMngEntity.hbm.xml</value>
				<value>com/bd/entity/ColumnListEntity.hbm.xml</value>
				<value>com/bd/entity/CommentEntity.hbm.xml</value>
				<value>com/bd/entity/DetailEntity.hbm.xml</value>
				<value>com/bd/entity/FavoriteAttentionEntity.hbm.xml</value>
				<value>com/bd/entity/FavoriteBlogEntity.hbm.xml</value>
				<value>com/bd/entity/FavoriteListEntity.hbm.xml</value>
				<value>com/bd/entity/FavoriteResourceEntity.hbm.xml</value>
				<value>com/bd/entity/InformationEntity.hbm.xml</value>
				<value>com/bd/entity/ResourceClassifyBigEntity.hbm.xml</value>
				<value>com/bd/entity/ResourceClassifySmallEntity.hbm.xml</value>
				<value>com/bd/entity/ResourceEntity.hbm.xml</value>
				<value>com/bd/entity/ResourceKeywordEntity.hbm.xml</value>
				<value>com/bd/entity/ResourceMngEntity.hbm.xml</value>
			</list>
		</property>		
	</bean>
	
	<!-- 声明Hibernate事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!--  定义事务通知 ,需要事务管理器  --> 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">	 
	  <!-- 指定事务传播规则 -->
	  <tx:attributes>
	  	<!-- 对所有方法应用REQUIRED事务规则 运行在一个事务里-->
	  	<tx:method name="*" propagation="REQUIRED" /> 
	  </tx:attributes>
	</tx:advice>
	
    <!--定义切面，并将事务通知和切面组合（定义哪些方法应用事务规则） -->
    <aop:config>
        <!-- 对com.shop.service包下的所有类的所有方法都应用事务规则 -->
    	<aop:pointcut id="serviceMethods" expression="execution(* com.bd.service.*.*(..))" /> 
    	<!--  将事务通知和切面组合   --> 
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" /> 
    </aop:config>
    
    <bean id="userDao" class="com.bd.dao.imply.UserDaoImply">
    	<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="userService" class="com.bd.service.imply.UserServiceImply">
    	<property name="userDao" ref="userDao"/>
    </bean>
    
    <bean id="uAction" class="com.bd.controller.UserAction" scope="prototype">
    	<property name="userService" ref="userService"/>
    </bean>
	
	<bean id="blogDao" class="com.bd.dao.imply.BlogDaoImply">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="blogService" class="com.bd.service.imply.BlogServiceImply">
		<property name="blogDao" ref="blogDao"/>
	</bean>
	
	<!-- 定义BlogAction类 ，并为其中属性blogService注入值 -->
	<bean id="bAction" class="com.bd.controller.BlogAction" scope="prototype">
		<property name="blogService" ref="blogService"/>
	</bean>

	<!-- 请规范命名,不要简写 -->
	<bean id="writeBlogDaoImply" class="com.bd.dao.imply.WriteBlogDaoImply" scope="prototype">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="writeBlogServiceImply" class="com.bd.service.imply.WriteBlogServiceImply" scope="prototype">
		<property name="writeBlogDao" ref="writeBlogDaoImply"/>
	</bean>

	<!-- 定义WriteBlogAction类 -->
	<bean id="wbAction" class="com.bd.controller.WriteBlogAction" scope="prototype">
		<property name="wbs" ref="writeBlogServiceImply"/>
	</bean>


	<!--定义upload-->
	<bean id="resourceDaoImply" class="com.bd.dao.imply.ResourceDaoImply" scope="prototype">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="resourceServiceImply" class="com.bd.service.imply.ResourceServiceImply" scope="prototype">
		<property name="resourceDao" ref="resourceDaoImply"/>
	</bean>

	<bean id="uploadAction" class="com.bd.controller.UploadAction" scope="prototype">
		<property name="resourceService" ref="resourceServiceImply"/>
	</bean>

	<!-- resource list configure-->
	<bean id="resourceAction" class="com.bd.controller.ResourceAction" scope="prototype">
		<property name="resourceService" ref="resourceServiceImply"/>
	</bean>

</beans>